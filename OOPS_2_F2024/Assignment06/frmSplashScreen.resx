<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /f8Pyfz/B8j8/wjI/OgIyPxyCMj8DwjI/AAIyPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAIyPwACMj8GQjI/K0IyPz7B8j8/xLK/P9I1P7/ZNr//2Xa//9k2v//ZNr//2Ta//9k2v//ZNr//2Ta
        //9l2v//ZNr//0jU/v8Syvz/B8j8/wjI/PsIyPyuCMj8GQjI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAjI/AAIyPxaCMj8/QjI/P8Nyfz/RdT+/2Xb//9k3P//ZNr//2Ta//9k2v//ZNr//2Tc
        //9k2v//ZNr//2Ta//9k2v//Zdr//0XU/v8Nyfz/CMj8/wjI/P0IyPxaCMj8AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACMj8AAjI/G8IyPz/B8j8/y7Q/f9j2///YsDZ/1+ntf9k2f7/ZNr//2Ta
        //9j0vT/XqCq/2PP7/9k2///ZNr//2Ta//9k2v//Y9r//y7Q/f8HyPz/CMj8/wjI/G8IyPwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPwACMj8gAjI/P8Pyvz/Utb+/2Xd//9enKb/WWZX/2TX
        +/9k2v//ZNv//2LF4f9XVj//Yb/X/2Tc//9k2v//ZNr//2Ta//9l2v//Utb+/w/K/P8IyPz/CMj8gAjI
        /AAIyPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMj8AAjI/A8IyPy9B8j8/yHN/f9h2f//ZN3//16c
        pv9ZZ1f/ZNr6/2Td//9k3v//Ysjh/1dXQP9hvtf/ZNz//2Ta//9k2v//ZNr//2Ta//9h2f//Ic39/wfI
        /P8IyPy9CMj8DwjI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPwACMj8VgjI/PgHyPz/MdD9/2Xa
        //9k3f//Xp2n/1dUPf9emqP/Xpym/16dp/9dj5L/V081/2G/2P9k3P//ZNn+/2TY/P9k2v//ZNr//2Xa
        //8x0P3/B8j8/wjI/PgIyPxWCMj8AAjI/AAAAAAAAAAAAAAAAAAAAAAACMj8AAjI/AIIyPykCMj8/wfI
        /P840f7/Zdr//2Td//9enqj/VkQl/1lmVv9ZZ1f/WWdY/1hgTf9WSSz/Yb/Y/2Tf//9hus//XImJ/2TZ
        +v9k2///Zdr//zjR/v8HyPz/CMj8/wjI/KQIyPwCCMj8AAAAAAAAAAAAAAAAAAAAAAAIyPwACMj8AAjI
        /IMIyPz/B8j8/zXR/f9l2v//ZN3//16cpf9ZZlb/ZNT2/2TX+v9k2Pz/YsPd/1dWQP9hvdX/YsDZ/1yH
        hv9XUzv/YKu7/2PN7f9l2///NdH9/wfI/P8IyPz/CMj8gwjI/AAIyPwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAIyPwACMj8KQjI/N8GyPz/Kc79/2Ta//9k3f//Xp+q/1ljUv9k1vj/ZNr//2Tc//9iw9v/V1Y//2G8
        1P9cgX3/V04y/1U+Hf9YXUj/YLDC/2Tc//8pzv3/Bsj8/wjI/N8IyPwpCMj8AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAjI/AAIyPwBCMj8lgfI/P8Xy/z/W9j//2Xc//9hu9L/V1I6/2Cwwv9k3P//ZNn9/12Q
        k/9YYE3/Y9Hy/2TX+v9en6r/WF5L/2PL6f9k2Pz/W9j//xfL/P8HyPz/CMj8lgjI/AAIyPwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPx1CMj8/wnI/P9B0/7/Zdr//2TZ/f9djZD/V1I6/1p2
        bv9abWH/V1M8/1+ruv9k2///ZNz//2LI5P9fq7v/ZNn9/2Xa//9B0/7/Ccj8/wjI/P8IyPx1CMj8AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMj8AAjI/GcIyPz/B8j8/xnL/f9Z2P//Zdv//2TX
        +v9grr//XIaE/1yMjv9hvNP/ZNr+/2Ta//9k2v//ZNv//2Tc//9l2v//Wdj//xnL/f8HyPz/CMj8/wjI
        /GcIyPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyPwACMj8OwjI/OkIyPz/B8j8/yfO
        /f9d2f//Zdr//2Tc//9k3P//ZNz//2Tc//9k2v//ZNr//2Ta//9k2v//Zdr//13Z//8nzv3/B8j8/wjI
        /P8IyPzpCMj8OwjI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPwCCMj8SgjI
        /MkIyPz+CMj8/yXO/f9V1///Zdr//2Xa//9k2v//ZNr//2Ta//9k2v//Zdr//2Xa//9V1///Jc79/wjI
        /P8IyPz+CMj8yQjI/EsIyPwDCMj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI
        /AAIyPwACMj8GwjI/KgIyPz/B8j8/xTK/P820f7/Utb+/17Z//9i2v//Ytr//17Z//9S1/7/N9H+/xTK
        /P8HyPz/CMj8/wjI/KgIyPwbCMj8AAjI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAArH/QAIyPwACMj8JgjI/NUIyPz/B8j8/wfI/P8Pyfz/Gsz9/yLN/f8izf3/Gsz9/w/J
        /P8HyPz/B8j8/wjI/P8IyPzVCMj8JgjI/AAIyP0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPwACMj8VgjI/N4IyPzxCMj89gjI/P0HyPz/B8j8/wfI
        /P8HyPz/CMj8/QjI/PYIyPzxCMj83gjI/FYIyPwACMj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI/AAIyPwDCMj8IAjI/DUIyPxACMj8bwjI
        /MsIyPz7CMj8+wjI/MwIyPxvCMj8QAjI/DUIyPwhCMj8AwjI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjI
        /AAIyPwACMj8GwjI/GoIyPxrCMj8HAfJ/QAIyPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//GP//9hhv/+AAB//gAAf/8AAP//AAD//wAA//+AAf//gAH//4AB//8A
        AP//AAD//AAAP/gAAB/4AAAf+AAAH/gAAB/wAAAP8AAAD+AAAAfwAAAP8AAAD/AAAB/4AAAf+AAAH/gA
        AB/4AAAf/gAAf/8AAP//gAH//4AB///8P/8=
</value>
  </data>
</root>